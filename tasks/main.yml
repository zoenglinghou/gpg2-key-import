---
- name: Ensure system group
  ansible.builtin.group:
    name: "{{ gpg_group }}"
    system: "{{ true if gpg_system_group else false }}"
    state: "present"

- name: Ensure system user
  ansible.builtin.user:
    name: "{{ gpg_user }}"
    group: "{{ gpg_group }}"
    append: true
    home: "{{ gpg_home }}"
    system: "{{ true if gpg_system_user else false }}"

- name: Ensure gnupg2 pkgs
  ansible.builtin.apt:
    name:
      - pinentry-tty
      - gnupg2
    update_cache: true

- name: Ensure gnupg directory
  ansible.builtin.file:
    path: "{{ gpg_home }}/.gnupg"
    state: directory
    mode: "0700"
    owner: "{{ gpg_user }}"
    group: "{{ gpg_group }}"

- name: Ensure .gnupg cfgs
  ansible.builtin.template:
    src: "gnupg/{{ item }}.j2"
    dest: "{{ gpg_home }}/.gnupg/{{ item }}"
    owner: "{{ gpg_user }}"
    group: "{{ gpg_group }}"
    mode: '0600'
  with_items:
    - gpg-agent.conf
    - gpg.conf
  notify: reload gpg-agent

- name: Check public key
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --list-public-keys
  changed_when: false
  register: pubkey_check

- name: Check signing key
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --list-secret-keys
  changed_when: false
  register: signkey_check

- name: Check ownertrust
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --export-ownertrust
  changed_when: false
  register: ownertrust_check

- name: Ensure gpg2 dicrectory and keys
  when: (not signkey_check.stdout ) and (not pubkey_check.stdout) and (":6:" not in ownertrust_check.stdout)
  block:
    - name: Ensure gnupg directory
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: "directory"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0700"

    - name: Ensure pub key
      ansible.builtin.copy:
        content: "{{ gpg_pubkey }}"
        dest: "{{ tmp_dir }}/public.key"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0600"

    - name: Ensure ultimate trust
      ansible.builtin.copy:
        content: "{{ gpg_ownertrust }}"
        dest: "{{ tmp_dir }}/ultimate.txt"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0600"

    - name: Ensure sign key
      ansible.builtin.copy:
        content: "{{ gpg_signkey }}"
        dest: "{{ tmp_dir }}/signing.key"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0600"
      no_log: true

- name: Ensure public key
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --import {{ tmp_dir }}/public.key
  changed_when: true
  when: gpg_email not in pubkey_check.stdout

- name: Ensure signing key
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --passphrase {{ gpg_sign_passwd }} --import {{ tmp_dir }}/signing.key
  changed_when: true
  when: gpg_email not in signkey_check.stdout

- name: Ensure ownertrust
  become: true
  become_user: "{{ gpg_user }}"
  ansible.builtin.command:
    cmd: gpg2 --import-ownertrust {{ tmp_dir }}/ultimate.txt
  changed_when: true
  when: (":6:" not in ownertrust_check.stdout)

- name: Clean up tmp directory and keys
  ansible.builtin.file:
    state: absent
    path: "{{ tmp_dir }}/"
